//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UWUVCI_AIO.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UWUVCI_AIO.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap _ {
            get {
                object obj = ResourceManager.GetObject("!", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All paths set! You are now able to start injecting..
        /// </summary>
        internal static string AllPathsSet {
            get {
                return ResourceManager.GetString("AllPathsSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base downloaded.
        /// </summary>
        internal static string BaseDownloaded {
            get {
                return ResourceManager.GetString("BaseDownloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base not downloaded.
        /// </summary>
        internal static string BaseNotDownloaded {
            get {
                return ResourceManager.GetString("BaseNotDownloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path for the BaseRoms shouldn&apos;t be the same as the Injected Games one..
        /// </summary>
        internal static string BasePathInvalid {
            get {
                return ResourceManager.GetString("BasePathInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CommonKey is already set.
        /// </summary>
        internal static string CommonkeyAlreadySet {
            get {
                return ResourceManager.GetString("CommonkeyAlreadySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To use this option you need to enter the CommonKey (Settings -&gt; Set CommonKey).
        /// </summary>
        internal static string CommonkeyNeeded {
            get {
                return ResourceManager.GetString("CommonkeyNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No CommonKey stored.
        /// </summary>
        internal static string CommonkeyNotSet {
            get {
                return ResourceManager.GetString("CommonkeyNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CommonKey found.
        /// </summary>
        internal static string CommonkeySet {
            get {
                return ResourceManager.GetString("CommonkeySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Correct Key.
        /// </summary>
        internal static string CorrectKey {
            get {
                return ResourceManager.GetString("CorrectKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter all paths (Settings -&gt; Paths) to be able to inject..
        /// </summary>
        internal static string EnterAllPaths {
            get {
                return ResourceManager.GetString("EnterAllPaths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} folder missing.
        /// </summary>
        internal static string FolderDoesNotExist {
            get {
                return ResourceManager.GetString("FolderDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} folder found.
        /// </summary>
        internal static string FolderExists {
            get {
                return ResourceManager.GetString("FolderExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect Key.
        /// </summary>
        internal static string IncorrectKey {
            get {
                return ResourceManager.GetString("IncorrectKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inject created.
        /// </summary>
        internal static string InjectCreatedCaption {
            get {
                return ResourceManager.GetString("InjectCreatedCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inject successfully created.
        ///You can find your inject here:
        ///{0}.
        /// </summary>
        internal static string InjectCreatedText {
            get {
                return ResourceManager.GetString("InjectCreatedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Injection finished.
        /// </summary>
        internal static string InjectionFinishedCaption {
            get {
                return ResourceManager.GetString("InjectionFinishedCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Injection finished successfully!.
        /// </summary>
        internal static string InjectionFinishedText {
            get {
                return ResourceManager.GetString("InjectionFinishedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path for Injected Games shouldn&apos;t be the same as the BaseRom one..
        /// </summary>
        internal static string InjectionPathInvalid {
            get {
                return ResourceManager.GetString("InjectionPathInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid CommonKey provided.
        /// </summary>
        internal static string InvalidCommonkey {
            get {
                return ResourceManager.GetString("InvalidCommonkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Key.
        /// </summary>
        internal static string InvalidKey {
            get {
                return ResourceManager.GetString("InvalidKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packing finished.
        /// </summary>
        internal static string PackingFinished {
            get {
                return ResourceManager.GetString("PackingFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path saved successfully!.
        /// </summary>
        internal static string PathSaved {
            get {
                return ResourceManager.GetString("PathSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entered TitleKey for &quot;{0}&quot; is correct..
        /// </summary>
        internal static string TitlekeyCorrect {
            get {
                return ResourceManager.GetString("TitlekeyCorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entered TitleKey for &quot;{0}&quot; is incorrect..
        /// </summary>
        internal static string TitlekeyIncorrect {
            get {
                return ResourceManager.GetString("TitlekeyIncorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No TitleKey stored.
        /// </summary>
        internal static string TitlekeyNotSet {
            get {
                return ResourceManager.GetString("TitlekeyNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TitleKey found.
        /// </summary>
        internal static string TitlekeySet {
            get {
                return ResourceManager.GetString("TitlekeySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CommonKey successfully set.
        /// </summary>
        internal static string ValidCommonkey {
            get {
                return ResourceManager.GetString("ValidCommonkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Valid Key.
        /// </summary>
        internal static string ValidKey {
            get {
                return ResourceManager.GetString("ValidKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap X {
            get {
                object obj = ResourceManager.GetObject("X", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap yes {
            get {
                object obj = ResourceManager.GetObject("yes", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
